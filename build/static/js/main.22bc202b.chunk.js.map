{"version":3,"sources":["components/Blog.js","components/BlogForm.js","services/blogs.js","components/Notification.js","App.js","index.js"],"names":["Blog","blog","removeFunction","className","title","author","url","likes","name","value","id","onClick","BlogForm","titleHandler","authorHandler","likesHandler","urlHandler","addFunction","onSubmit","onChange","type","axios","get","then","response","data","newObject","post","object","put","removeId","delete","Notification","message","App","useState","blogs","setBlogs","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","newLikes","setNewLikes","errorMessage","setErrorMessage","useEffect","blogService","initialBlogs","removeBlog","event","preventDefault","window","confirm","target","filter","blogObject","find","oldBlog","updatedBlogObject","catch","error","blogToRemove","index","indexOf","splice","returnedBlog","concat","console","log","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22bc202b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Blog = ({ blog, removeFunction}) => {\n\n  return (\n    <div className = 'blog'>\n      <br></br>\n      <div>{blog.title}</div>\n      <div>{blog.author}</div>\n      <div>{blog.url}</div>\n      <div>{blog.likes}</div>\n      <button name = {blog.title} value={blog.id} onClick={removeFunction}> Delete</button>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\n\nconst BlogForm = ({title, author, likes, url, titleHandler, authorHandler, likesHandler, urlHandler, addFunction}) => {\n  return (\n    <form onSubmit={addFunction}>\n        <div>Blog title:  </div>\n        <input\n          value={title}\n          onChange={titleHandler}\n        />\n        <div>Author: </div>\n        <input\n          value={author}\n          onChange={authorHandler}\n        />\n        <div>Blog url:  </div>\n        <input\n          value={url}\n          onChange={urlHandler}\n        />\n        <div>likes: </div>\n        <input\n          value={likes}\n          onChange={likesHandler}\n        />\n        <div>\n          <button type=\"submit\">tallenna</button>\n        </div>\n      </form>\n  )\n}\n\nexport default BlogForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, object) => {\n  const request = axios.put(`${baseUrl}/${id}`, object)\n  return request.then(response => response.data)\n}\n\nconst remove = (removeId) => {\n    const request = axios.delete(`${baseUrl}/${removeId}`)\n    return request.then(response => response.data)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update, \n  remove: remove\n}\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [blogs, setBlogs] = useState([]) \n  const [newTitle, setNewTitle ] = useState('')\n  const [newAuthor, setNewAuthor ] = useState('')\n  const [newUrl, setNewUrl ] = useState('')\n  const [newLikes, setNewLikes ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const rows = () => blogs.map(blog =>\n    <Blog\n      key={blog.id}\n      blog={blog}\n      removeFunction={removeBlog}\n    />\n  )  \n\n  useEffect(() => {\n    blogService\n      .getAll()\n        .then(initialBlogs => {\n        setBlogs(initialBlogs)\n    })\n  }, [])\n\n  const removeBlog = (event) => {\n    event.preventDefault()\n    if(window.confirm(`Poistetaanko ${event.target.title}?`)){\n      blogService\n        .remove(event.target.value)\n          .then(setBlogs(blogs.filter(blog => blog.id !== event.target.value)))\n      setErrorMessage(`${event.target.title} poistettiin tietokannasta.`)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: newLikes\n    }\n    if(blogs.find(blog => blog.title === newTitle)){\n      const oldBlog = blogs.find(blog => blog.title === newTitle)\n      if(window.confirm(`${newTitle} on jo luettelossa. Haluatko korvata blogin?`)){\n            const updatedBlogObject = {\n              title: newTitle,\n              author: newAuthor,\n              url: newUrl,\n              likes: newLikes,\n              id: oldBlog.id\n            }\n      \n            blogService\n              .update(updatedBlogObject.id,updatedBlogObject)\n              .catch(error => {\n                setErrorMessage(`Blogi \"${updatedBlogObject.title}\" on jo poistettu palvelimelta.`)\n              })\n\n              const blogToRemove = blogs.find(blog => blog.id === updatedBlogObject.id)\n              const index = blogs.indexOf(blogToRemove)\n              blogs.splice(index,1,updatedBlogObject)\n              setNewTitle(\"\")\n              setNewAuthor(\"\")\n              setNewLikes(\"\")\n              setNewUrl(\"\")\n              setErrorMessage(`Blogin \"${updatedBlogObject.title}\" tiedot päivitettiin.`)\n            }\n        }\n        else{\n          blogService\n            .create(blogObject)\n              .then(returnedBlog => {\n                setBlogs(blogs.concat(returnedBlog))\n                setNewTitle(\"\")\n                setNewAuthor(\"\")\n                setNewUrl(\"\")\n                setNewLikes(\"\")\n                setErrorMessage(`${returnedBlog.title} lisättiin puhelinluetteloon.`)\n              })\n              .catch(error => {\n                console.log(error.response.data)\n                setErrorMessage(error.response.data)\n              })\n        }\n  }\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const handleLikesChange = (event) => {\n    setNewLikes(event.target.value)\n  }\n\n  return (\n    <div>\n\n      <Notification message={errorMessage} />\n\n      <h1>Blogilista</h1>  \n\n      <BlogForm\n        title = {newTitle}\n        author = {newAuthor}\n        url = {newUrl}\n        likes = {newLikes}\n        titleHandler = {handleTitleChange}\n        authorHandler = {handleAuthorChange}\n        urlHandler = {handleUrlChange}\n        likesHandler = {handleLikesChange}\n        addFunction = {addBlog}\n      />\n      {rows()}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nconsole.log(\"Rendering app.\")\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}