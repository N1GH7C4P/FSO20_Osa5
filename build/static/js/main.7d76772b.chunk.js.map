{"version":3,"sources":["components/Blog.js","components/BlogForm.js","services/blogs.js","services/login.js","components/Notification.js","components/LoginForm.js","App.js","index.js"],"names":["Blog","_ref","blog","removeFunction","react_default","a","createElement","className","title","author","url","likes","name","value","id","onClick","BlogForm","titleHandler","authorHandler","likesHandler","urlHandler","addFunction","onSubmit","onChange","type","token","services_blogs","getAll","axios","get","then","response","data","create","Object","asyncToGenerator","regenerator_default","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","arguments","update","object","put","concat","remove","removeId","delete","setToken","newToken","services_login","login","credentials","ErrorNotification","message","SuccessNotification","_ref2","LoginForm","handleLogin","handleUsernameChange","handlePasswordChange","username","password","App","_useState","useState","_useState2","slicedToArray","blogs","setBlogs","_useState3","_useState4","newTitle","setNewTitle","_useState5","_useState6","newAuthor","setNewAuthor","_useState7","_useState8","newUrl","setNewUrl","_useState9","_useState10","newLikes","setNewLikes","_useState11","_useState12","errorMessage","setErrorMessage","_useState13","_useState14","successMessage","setSuccessMessage","_useState15","_useState16","setUsername","_useState17","_useState18","setPassword","_useState19","_useState20","user","setUser","_useState21","_useState22","loginVisible","setLoginVisible","event","_user","preventDefault","console","log","loginService","window","localStorage","setItem","JSON","stringify","blogService","t0","setTimeout","handleLogout","_callee2","_context2","removeItem","_x2","useEffect","initialBlogs","loggedUserJSON","getItem","parse","removeBlog","confirm","target","filter","addBlog","blogObject","find","oldBlog","updatedBlogObject","catch","error","blogToRemove","index","indexOf","splice","returnedBlog","handleTitleChange","handleAuthorChange","handleUrlChange","handleLikesChange","Notification_ErrorNotification","Notification_SuccessNotification","hideWhenVisible","display","showWhenVisible","style","components_LoginForm","handleSubmit","loginForm","components_BlogForm","map","components_Blog","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7d76772b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Blog = ({ blog, removeFunction}) => {\n\n  return (\n    <div className = 'blog'>\n      <br></br>\n      <div>{blog.title}</div>\n      <div>{blog.author}</div>\n      <div>{blog.url}</div>\n      <div>{blog.likes}</div>\n      <button name = {blog.title} value={blog.id} onClick={removeFunction}> Delete</button>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\n\nconst BlogForm = ({title, author, likes, url, titleHandler, authorHandler, likesHandler, urlHandler, addFunction}) => {\n  return (\n    <form onSubmit={addFunction}>\n        <div>Blog title:  </div>\n        <input\n          value={title}\n          onChange={titleHandler}\n        />\n        <div>Author: </div>\n        <input\n          value={author}\n          onChange={authorHandler}\n        />\n        <div>Blog url:  </div>\n        <input\n          value={url}\n          onChange={urlHandler}\n        />\n        <div>likes: </div>\n        <input\n          value={likes}\n          onChange={likesHandler}\n        />\n        <div>\n          <button type=\"submit\">tallenna</button>\n        </div>\n      </form>\n  )\n}\n\nexport default BlogForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\nconst setToken = newToken => {  \n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n\n  return response.data\n}\n\nconst update = (id, object) => {\n  const request = axios.put(`${baseUrl}/${id}`, object)\n  return request.then(response => response.data)\n}\n\nconst remove = (removeId) => {\n    const request = axios.delete(`${baseUrl}/${removeId}`)\n    return request.then(response => response.data)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update, \n  remove: remove,\n  setToken: setToken\n}\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst SuccessNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nexport {ErrorNotification, SuccessNotification}","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n    handleLogin,\r\n    handleUsernameChange,\r\n    handlePasswordChange,\r\n    username,\r\n    password\r\n    }) => {\r\n    return (\r\n        <form onSubmit={handleLogin}>\r\n        <div>\r\n            username\r\n            <input \r\n                type=\"text\" \r\n                value={username} \r\n                name=\"Username\" \r\n                onChange={handleUsernameChange}\r\n            />\r\n        </div>\r\n        <div>\r\n            password\r\n            <input\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={handlePasswordChange}\r\n            />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n    </form>\r\n    )\r\n}\r\nexport default LoginForm","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport {ErrorNotification, SuccessNotification} from './components/Notification'\nimport LoginForm from './components/LoginForm'\n\nconst App = () => {\n\n  const [blogs, setBlogs] = useState([]) \n  const [newTitle, setNewTitle ] = useState('')\n  const [newAuthor, setNewAuthor ] = useState('')\n  const [newUrl, setNewUrl ] = useState('')\n  const [newLikes, setNewLikes ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user)) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    console.log('logging out: ', username)\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n\n  const logoutForm = () => (\n    <form onSubmit={handleLogout}>\n      <div>\n        <button type=\"submit\">logout</button>    \n      </div>\n    </form>\n  )\n\n  const blogForm = () => (\n    <BlogForm\n        title = {newTitle}\n        author = {newAuthor}\n        url = {newUrl}\n        likes = {newLikes}\n        titleHandler = {handleTitleChange}\n        authorHandler = {handleAuthorChange}\n        urlHandler = {handleUrlChange}\n        likesHandler = {handleLikesChange}\n        addFunction = {addBlog}\n      />\n  )\n  \n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={handleUsernameChange}\n            handlePasswordChange={handlePasswordChange}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n  const rows = () => blogs.map(blog =>\n    <Blog\n      key={blog.id}\n      blog={blog}\n      removeFunction={removeBlog}\n    />\n  )  \n\n  useEffect(() => {\n    blogService\n      .getAll()\n        .then(initialBlogs => {\n        setBlogs(initialBlogs)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')    \n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }  }, [])\n\n  const removeBlog = (event) => {\n    event.preventDefault()\n    if(window.confirm(`Poistetaanko ${event.target.title}?`)){\n      blogService\n        .remove(event.target.value)\n          .then(setBlogs(blogs.filter(blog => blog.id !== event.target.value)))\n      setSuccessMessage(`${event.target.title} poistettiin tietokannasta.`)\n      setErrorMessage(null)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: newLikes\n    }\n    if(blogs.find(blog => blog.title === newTitle)){\n      const oldBlog = blogs.find(blog => blog.title === newTitle)\n      if(window.confirm(`${newTitle} on jo luettelossa. Haluatko korvata blogin?`)){\n            const updatedBlogObject = {\n              title: newTitle,\n              author: newAuthor,\n              url: newUrl,\n              likes: newLikes,\n              id: oldBlog.id\n            }\n      \n            blogService\n              .update(updatedBlogObject.id,updatedBlogObject)\n              .catch(error => {\n                setErrorMessage(`Blogi \"${updatedBlogObject.title}\" on jo poistettu palvelimelta.`)\n              })\n\n              const blogToRemove = blogs.find(blog => blog.id === updatedBlogObject.id)\n              const index = blogs.indexOf(blogToRemove)\n              blogs.splice(index,1,updatedBlogObject)\n              setNewTitle(\"\")\n              setNewAuthor(\"\")\n              setNewLikes(\"\")\n              setNewUrl(\"\")\n              setSuccessMessage(`Blogin \"${updatedBlogObject.title}\" tiedot päivitettiin.`)\n            }\n        }\n        else{\n          blogService\n            .create(blogObject)\n              .then(returnedBlog => {\n                setBlogs(blogs.concat(returnedBlog))\n                setNewTitle(\"\")\n                setNewAuthor(\"\")\n                setNewUrl(\"\")\n                setNewLikes(\"\")\n                setSuccessMessage(`${returnedBlog.title} lisättiin blogilistalle.`)\n              })\n              .catch(error => {\n                console.log(error.response.data)\n                setErrorMessage(error.response.data)\n              })\n        }\n  }\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const handleLikesChange = (event) => {\n    setNewLikes(event.target.value)\n  }\n\n  return (\n    <div>\n\n      <ErrorNotification message={errorMessage} />\n      <SuccessNotification message={successMessage} />\n\n      <h1>Blogilista</h1>  \n\n      {user === null ? \n        loginForm() : \n        <div>\n          <p>{user.name} logged in</p>\n          {blogForm()}\n          {logoutForm()}\n        </div>\n      }\n\n      {rows()}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nconsole.log(\"Rendering app.\")\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}